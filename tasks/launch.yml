---

- name: Verify if virtual machine already exists
  command: "/usr/bin/virsh dominfo {{ libvirt_vm_hostname }}.{{ libvirt_vm_domain }}"
  register: virsh_dominfo
  changed_when: false
  failed_when: false
  delegate_to: "{{ libvirt_vm_hypervisor }}"
  sudo: yes

#- name: Allocate IP address for new virtual machine in DHCP server
#  command: "/usr/bin/virsh net-update --config --live {{ libvirt_vm_network }} add ip-dhcp-host \"<host mac='{{ libvirt_vm_mac_addr }}' name='{{ libvirt_vm_hostname }}.{{ libvirt_vm_domain }}' ip='{{ libvirt_vm_ip_addr }}'/>\""
#  delegate_to: "{{ libvirt_vm_hypervisor }}"
#  sudo: yes
#  when: virsh_dominfo.rc != 0

- name: Copy network configuration file
  template:
    src: ifcfg.j2
    dest: "/tmp/libvirt_vm_ifcfg-{{ libvirt_vm_hostname }}.{{ libvirt_vm_domain }}"
  delegate_to: "{{ libvirt_vm_hypervisor }}"

- name: Build virtual disk
  command: "/usr/bin/virt-builder {{ libvirt_vm_template }} --hostname {{ libvirt_vm_hostname }}.{{ libvirt_vm_domain }} --format qcow2 --size {{ libvirt_vm_disk }} -o {{ libvirt_vm_images_path }}/{{ libvirt_vm_hostname }}.{{ libvirt_vm_domain }}.qcow2 --root-password {{ libvirt_vm_root_password }} --source {{ libvirt_vm_virtbuilder_source }} --fingerprint '{{ libvirt_vm_virtbuilder_fingerprint }}' {{ libvirt_vm_virtbuilder_additional_opts }}"
  delegate_to: "{{ libvirt_vm_hypervisor }}"
  sudo: true
  when: virsh_dominfo.rc != 0

- name: Launch virtual machine
  command: "/usr/bin/virt-install --import --name {{ libvirt_vm_hostname }}.{{ libvirt_vm_domain }} --ram {{ libvirt_vm_mem }} --vcpus {{ libvirt_vm_cpu }} --disk {{ libvirt_vm_images_path }}/{{ libvirt_vm_hostname }}.{{ libvirt_vm_domain }}.qcow2 --network bridge={{ libvirt_vm_bridge }},model=virtio --mac {{ libvirt_vm_mac_addr }} --os-variant={{ libvirt_vm_osvariant }} --copy-in /tmp/libvirt_vm_ifcfg-{{ libvirt_vm_hostname }}.{{ libvirt_vm_domain }}:/etc/sysconfig/network-scripts/ifcfg-eth0 --nographics --noautoconsole {% if libvirt_vm_autostart %}--autostart{% endif %}"
  delegate_to: "{{ libvirt_vm_hypervisor }}"
  sudo: true
  when: virsh_dominfo.rc != 0

- name: Wait for VM to become acessible
  wait_for:
    host: "{{ libvirt_vm_ip_addr }}"
    port: "22"
    delay: 10
    timeout: 60
  delegate_to: "{{ libvirt_vm_hypervisor }}"
  when: libvirt_vm_wait_online and virsh_dominfo.rc != 0
